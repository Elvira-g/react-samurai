{"version":3,"sources":["redux/dialogs-reduser.js","components/common/preloader/Preloader.module.css","api/api.js","hoc/withAuthRedirect.js","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.js","components/login/Login.js","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/preloader/Preloader.js","components/common/Paginator/Paginator.module.css","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Users/Users.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["__webpack_require__","d","__webpack_exports__","sendMessageCreator","initialState","dialogs","id","name","messages","message","newMessageBody","type","dialogsReducer","state","arguments","length","undefined","action","body","module","exports","preloader","UsersAPI","ProfileAPI","authAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","pageSize","get","concat","then","response","data","unfollowUser","delete","followUser","post","getUserProfile","console","warn","getStatus","updateStatus","status","put","authMe","login","email","password","rememberMe","logout","withAuthRedirect","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_2__","mapStateToPropsForRedirect","isAuth","auth","Component","connect","React","render","this","props","createElement","Redirect","to","nav","item","activeLink","Textarea","Input","createField","redux_form__WEBPACK_IMPORTED_MODULE_1__","_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_2__","_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_2___default","FormControl","_ref","input","meta","touched","error","children","hasError","className","s","formControl","child","restProps","Object","assign","placeholder","validators","component","text","Field","validate","Boolean","window","location","hostname","match","Navbar","NavLink","activeClassName","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setUsers","setPageNumber","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","async","dispatch","apiMethod","actionCreator","resultCode","usersReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","useState","leftPortionPageNumber","rightPortionPageNumber","paginator","button","onClick","p","cn","[object Object]","pageNumber","key","User","user","userCard","src","photos","small","img","disabled","some","city","country","Users","getUsersList","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","compose","bind","setTotalUsersCount","totalCount","constructor","super","componentDidMount","Preloader","Header","header","loginBlock","setAuthUserData","payload","getAuthUserData","authReducer","maxLength","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","formError","rememderMe","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","redusers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","DialogsContainer","lazy","e","ProfileContainer","AppContainer","withRouter","initializeApp","HeaderContainer","Route","path","UsersContainer","Login","SamuraiJSApp","BrowserRouter","basename","process","Provider","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","_Preloader_module_css__WEBPACK_IMPORTED_MODULE_1__","_Preloader_module_css__WEBPACK_IMPORTED_MODULE_1___default","value","getProfile","getUserStatus","updateUserStatus","addPostActionCreator","setUserProfile","_api_api__WEBPACK_IMPORTED_MODULE_0__","posts","likesCount","profile","setUserStatus","newPost","newPostText"],"mappings":"0FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAGA,IAAIC,EAAe,CACfC,QAAS,CACL,CAACC,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,WAElBC,SAAU,CACN,CAACF,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,6BACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,QAIzB,MAmBaN,EAAsBO,IAAc,CAAOC,KAvCnC,eAuCuDD,mBAI7DE,IAvBQ,WAAkC,IAAjCC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGV,EAAca,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEhD,OAAOC,EAAON,MAMV,IA5Ba,eA6BT,IAAIO,EAAOD,EAAOP,eAClB,MAAO,IACAG,EACHL,SAAU,IAAIK,EAAML,SAAU,CAACF,GAAI,EAAGG,QAASS,KAEvD,QACI,OAAOL,yBCnCnBM,EAAAC,QAAA,CAAkBC,UAAA,+DCDlBrB,EAAAC,EAAAC,EAAA,sBAAAoB,IAAAtB,EAAAC,EAAAC,EAAA,sBAAAqB,IAAAvB,EAAAC,EAAAC,EAAA,sBAAAsB,IAAA,IAAAC,EAAAzB,EAAA,KAEA,MAAM0B,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CAACC,UAAW,0CAGZT,EAAW,CACpBU,WAAqC,IAA5BC,EAAWnB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,EAAGoB,EAAQpB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,GAC7B,OAAOY,EAASS,IAAG,cAAAC,OAAeH,EAAW,WAAAG,OAAUF,IAClDG,KAAKC,GAAYA,EAASC,OAGnCC,aAAalC,GACFoB,EAASe,OAAM,UAAAL,OAAW9B,IAAM+B,KAAKC,GAAYA,EAASC,MAGrEG,WAAWpC,GACAoB,EAASiB,KAAI,UAAAP,OAAW9B,IAAM+B,KAAKC,GAAYA,EAASC,MAGnEK,eAAetC,IACXuC,QAAQC,KAAK,yBACNvB,EAAWqB,eAAetC,KAK5BiB,EAAa,CACtBqB,eAAetC,GACJoB,EAASS,IAAG,WAAAC,OAAY9B,IAAM+B,KAAKC,GAAYA,EAASC,MAEnEQ,UAAUzC,GACCoB,EAASS,IAAG,kBAAAC,OAAmB9B,IAE1C0C,aAAaC,GACFvB,EAASwB,IAAG,iBAAkB,CAACD,OAAQA,KAIzCzB,EAAU,CACnB2B,OAAMA,IACKzB,EAASS,IAAG,WAEvBiB,MAAMC,EAAOC,GAA8B,IAApBC,EAAUzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC7B,OAAOY,EAASiB,KAAI,aAAe,CAACU,QAAOC,WAAUC,gBAEzDC,OAAMA,IACK9B,EAASe,OAAM,iDCjD9BzC,EAAAC,EAAAC,EAAA,sBAAAuD,IAAA,IAAAC,EAAA1D,EAAA,GAAA2D,EAAA3D,EAAA4D,EAAAF,GAAAG,EAAA7D,EAAA,KAAA8D,EAAA9D,EAAA,GAIA,IAAI+D,EAA8BlD,IAAK,CACnCmD,OAAQnD,EAAMoD,KAAKD,SAGhB,MAAMP,EAAoBS,IAY7B,OAFqCC,YAAQJ,EAARI,CARrC,cAAgCC,IAAMF,UAClCG,SACI,OAAKC,KAAKC,MAAMP,OAETI,IAAAI,cAACN,EAAcI,KAAKC,OAFIH,IAAAI,cAACC,IAAQ,CAACC,GAAI,mCCXzDvD,EAAAC,QAAA,CAAkBuD,IAAA,oBAAAC,KAAA,qBAAAC,WAAA,+ICDlB7E,EAAAC,EAAAC,EAAA,sBAAA4E,IAAA9E,EAAAC,EAAAC,EAAA,sBAAA6E,IAAA/E,EAAAC,EAAAC,EAAA,sBAAA8E,IAAA,IAAAtB,EAAA1D,EAAA,GAAA2D,EAAA3D,EAAA4D,EAAAF,GAAAuB,EAAAjF,EAAA,IAAAkF,EAAAlF,EAAA,IAAAmF,EAAAnF,EAAA4D,EAAAsB,GAIA,MAAME,EAAcC,IAA+C,IAA9CC,MAACA,EAAOC,MAAMC,QAACA,EAAOC,MAAEA,GAAMC,SAAEA,GAASL,EAC1D,MAAMM,EAAWH,GAAYC,EAC7B,OACIrB,IAAAI,cAAA,OAAKoB,UAAWC,IAAEC,YAAc,KAAOH,EAAWE,IAAEJ,MAAQ,KACxDrB,IAAAI,cAAA,WACKkB,GAEHC,GAAYvB,IAAAI,cAAA,YAAM,IAAEiB,KAMrBX,EAAYP,IACrB,MAAMe,MAACA,EAAKC,KAAEA,EAAIQ,MAAEA,KAAUC,GAAazB,EAC3C,OAAOH,IAAAI,cAACY,EAAgBb,EAAOH,IAAAI,cAAA,WAAAyB,OAAAC,OAAA,GAAcZ,EAAWU,MAG/CjB,EAASR,IAClB,MAAMe,MAACA,EAAKC,KAAEA,KAASS,GAAazB,EACpC,OAAOH,IAAAI,cAACY,EAAgBb,EAAOH,IAAAI,cAAA,QAAAyB,OAAAC,OAAA,GAAWZ,EAAWU,MAG5ChB,EAAc,SAACmB,EAAa5F,EAAM6F,EAAYC,GAAS,IAAE9B,EAAKzD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAE,GAAIwF,EAAIxF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OACtFsD,IAAAI,cAAA,WACIJ,IAAAI,cAAC+B,IAAKN,OAAAC,OAAA,CAACG,UAAWA,EACVG,SAAUJ,EAAY7F,KAAMA,EAAM4F,YAAaA,GAAiB5B,IAAU+B,6CClBtEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2ICWSC,MAzBAA,IAEP1C,IAAAI,cAAA,OAAKoB,UAAWC,IAAElB,KACdP,IAAAI,cAAA,OAAKoB,UAAWC,IAAEjB,MACdR,IAAAI,cAACuC,IAAO,CAACrC,GAAG,WAAWsC,gBAAiBnB,IAAEhB,YAAY,YAE1DT,IAAAI,cAAA,OAAKoB,UAAS,GAAAxD,OAAKyD,IAAEjB,KAAI,KAAAxC,OAAIyD,IAAEoB,SAC3B7C,IAAAI,cAACuC,IAAO,CAACrC,GAAG,WAAWsC,gBAAiBnB,IAAEhB,YAAY,aAE1DT,IAAAI,cAAA,OAAKoB,UAAWC,IAAEjB,MACdR,IAAAI,cAACuC,IAAO,CAACrC,GAAG,SAASsC,gBAAiBnB,IAAEhB,YAAY,UAExDT,IAAAI,cAAA,OAAKoB,UAAWC,IAAEjB,MACdR,IAAAI,cAAA,SAAG,SAEPJ,IAAAI,cAAA,OAAKoB,UAAWC,IAAEjB,MACdR,IAAAI,cAAA,SAAG,UAEPJ,IAAAI,cAAA,OAAKoB,UAAWC,IAAEjB,MACdR,IAAAI,cAAA,SAAG,sCCvBZ,MAAM0C,EAAsBA,CAACC,EAAOC,EAAQC,EAAaC,IACrDH,EAAMI,IAAKC,GACVA,EAAEH,KAAiBD,EACZ,IAAII,KAAMF,GAEdE,GCMf,IAAIpH,EAAe,CACfqH,MAAO,GACPvF,SAAU,GACVwF,gBAAiB,EACjBzF,YAAa,EACb0F,YAAY,EACZC,oBAAqB,IAGzB,MA+BaC,EAAiBC,IAAM,CAAOnH,KAhD5B,SAgD0CmH,OAAQA,IACpDC,EAAmBD,IAAM,CAAOnH,KAhD5B,WAgD4CmH,OAAQA,IACxDE,EAAYP,IAAK,CAAO9G,KAhDnB,YAgDoC8G,MAAOA,IAChDQ,EAAiBhG,IAAW,CAAOtB,KAhDvB,mBAgD+CsB,YAAaA,IAExEiG,EAAoBP,IAAU,CAAOhH,KAhDvB,qBAgDiDgH,eAC/DQ,EAA0BA,CAACR,EAAYG,KAAM,CAAOnH,KAhD5B,+BAgDgEgH,aAAYG,WAW3GM,EAAqBC,MAAOC,EAAUR,EAAQS,EAAWC,KAC3DF,EAASH,GAAwB,EAAML,IAEhB,WADJS,EAAUT,IACrBW,YACJH,EAASE,EAAcV,IAE3BQ,EAASH,GAAwB,EAAOL,KAc7BY,MApEM,WAAkC,IAAjC7H,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGV,EAAca,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAOC,EAAON,MACV,IAnBO,SAoBH,MAAO,IACAE,EACH4G,MAAOP,EAAoBrG,EAAM4G,MAAOxG,EAAO6G,OAAQ,KAAM,CAACa,UAAU,KAGhF,IAxBS,WAyBL,MAAO,IACA9H,EACH4G,MAAOP,EAAoBrG,EAAM4G,MAAOxG,EAAO6G,OAAQ,KAAM,CAACa,UAAU,KAEhF,IA5BU,YA6BN,MAAO,IAAI9H,EAAO4G,MAAOxG,EAAOwG,OACpC,IA7BiB,mBA8Bb,MAAO,IAAI5G,EAAOoB,YAAahB,EAAOgB,aAC1C,IA9BsB,wBA+BlB,MAAO,IAAIpB,EAAO6G,gBAAiBzG,EAAOyG,iBAC9C,IA/BmB,qBAgCf,MAAO,IAAI7G,EAAO8G,WAAY1G,EAAO0G,YACzC,IAhC6B,+BAiCzB,MAAO,IAAI9G,EACP+G,oBAAqB3G,EAAO0G,WAC1B,IAAI9G,EAAM+G,oBAAoB3G,EAAO6G,QACrCjH,EAAM+G,oBAAoBgB,OAAOtI,GAAMA,GAAMW,EAAO6G,SAC9D,QACI,OAAOjH,uCCVJgI,MAhCCxD,IAA+E,IAA9EyD,gBAACA,EAAe5G,SAAEA,EAAQD,YAAEA,EAAW8G,cAAEA,EAAaC,YAAEA,EAAc,IAAG3D,EAClF4D,EAAaC,KAAKC,KAAKL,EAAkB5G,GAEzCkH,EAAQ,GACZ,IAAK,IAAIC,EAAE,EAAGA,GAAKJ,EAAYI,IAC3BD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,IACrCQ,EAAeC,GAAoBC,mBAAS,GAC7CC,GAAyBH,EAAgB,GAAKR,EAAc,EAC5DY,EAAyBJ,EAAgBR,EAE7C,OACI5E,IAAAI,cAAA,OAAKoB,UAAWC,IAAEgE,WACbL,EAAgB,GACbpF,IAAAI,cAAA,UAAQoB,UAAWC,IAAEiE,OAAQC,QAASA,KAAQN,EAAiBD,EAAgB,KAAM,QACvFJ,EACGR,OAAOoB,GAAKA,GAAKL,GAAyBK,GAAKJ,GAC/CrC,IAAKyC,GACC5F,IAAAI,cAAA,QAAMoB,UAAYqE,IAAG,CACxBC,CAACrE,IAAEoB,QAAShF,IAAgB+H,GAC7BnE,IAAEsE,YACDJ,QAASA,KAAMhB,EAAciB,IAC7BI,IAAKJ,GAAIA,IAEhBT,EAAeC,GACZpF,IAAAI,cAAA,UAAQoB,UAAWC,IAAEiE,OAAQC,QAASA,KAAQN,EAAiBD,EAAgB,KAAM,4CCNtFa,MAtBJhF,IAAqE,IAApEiF,KAACA,EAAI1C,oBAAEA,EAAmBlF,WAAEA,EAAUF,aAAEA,KAAiB+B,GAAMc,EACvE,OAAQjB,IAAAI,cAAA,OAAKoB,UAAWC,IAAE0E,UACdnG,IAAAI,cAACuC,IAAO,CAACrC,GAAI,YAAc4F,EAAKhK,IAC5B8D,IAAAI,cAAA,OAAKgG,IAAKF,EAAKG,OAAOC,MAAQJ,EAAKG,OAAOC,MAAQ,iIAAkI9E,UAAWC,IAAE8E,OAErMvG,IAAAI,cAAA,WAAK,SAAO8F,EAAK/J,MACjB6D,IAAAI,cAAA,WACK8F,EAAK3B,SACAvE,IAAAI,cAAA,UAAQoG,SAAUhD,EACfiD,KAAKvK,GAAMA,IAAOgK,EAAKhK,IACpByJ,QAASA,KAAOvH,EAAa8H,EAAKhK,MAAO,YAE/C8D,IAAAI,cAAA,UAAQoG,SAAUhD,EAAoBiD,KAAKvK,GAAMA,IAAOgK,EAAKhK,IAC3DyJ,QAASA,KAAQrH,EAAW4H,EAAKhK,MAAO,WAGpD8D,IAAAI,cAAA,WAAK,WAAS8F,EAAKrH,QAClBqH,EAAK3D,UAAY2D,EAAK3D,SAASmE,MAAQ1G,IAAAI,cAAA,WAAK,SAAO8F,EAAK3D,SAASmE,MACjER,EAAK3D,UAAY2D,EAAK3D,SAASoE,SAAW3G,IAAAI,cAAA,WAAK,YAAU8F,EAAK3D,SAASoE,WCXzEC,MAPH3F,IAA6H,IAA5HqC,gBAACA,EAAexF,SAAEA,EAAQD,YAAEA,EAAW8G,cAAEA,EAAatB,MAAEA,EAAKG,oBAAEA,EAAmBlF,WAAEA,EAAUF,aAAEA,KAAiB+B,GAAMc,EAChI,OAAQjB,IAAAI,cAAA,WACJJ,IAAAI,cAACqE,EAAS,CAAC5G,YAAaA,EAAa8G,cAAeA,EAAeD,gBAAiBpB,EAAiBxF,SAAUA,IAC9GuF,EAAMF,IAAI+C,GAAQlG,IAAAI,cAAC6F,EAAI,CAACC,KAAMA,EAAM1C,oBAAqBA,EAAqBlF,WAAYA,EAAYF,aAAcA,EAAc4H,IAAKE,EAAKhK,8BCP9I,MAAM2K,EAAgBpK,GAClBA,EAAMqK,UAAUzD,MAGd0D,EAAetK,GACjBA,EAAMqK,UAAUhJ,SAGdkJ,EAAsBvK,GACxBA,EAAMqK,UAAUxD,gBAGd2D,EAAkBxK,GACpBA,EAAMqK,UAAUjJ,YAGdqJ,EAAiBzK,GACnBA,EAAMqK,UAAUvD,WAGd4D,EAA0B1K,GAC5BA,EAAMqK,UAAUtD,oBCqEZ4D,kBAEPrH,YAjDetD,IACZ,CACH4G,MAAOwD,EAAapK,GACpBqB,SAAUiJ,EAAYtK,GACtB6G,gBAAiB0D,EAAmBvK,GACpCoB,YAAaoJ,EAAexK,GAC5B8G,WAAY2D,EAAczK,GAC1B+G,oBAAqB2D,EAAuB1K,KA0CpB,CACpB6B,WLhBeoF,GAAYQ,IACnCF,EAAmBE,EAAUR,EAAQxG,IAASoB,WAAW+I,KAAK3D,GAASD,IKgB/DrF,aLXiBsF,GAAYQ,IACrCF,EAAmBE,EAAUR,EAAQxG,IAASkB,aAAaiJ,KAAK3D,GAASC,IKWjEC,WACAC,gBACAE,0BACAnG,SLvCYA,CAACC,EAAYC,IAAamG,UAC9CC,EAASJ,GAAiB,IAC1BI,EAASL,EAAchG,IACvB,MAAMM,QAAajB,IAASU,SAASC,EAAaC,GAClDoG,EAASN,EAASzF,EAAK4E,QACvBmB,EAT+BZ,KAAe,CAAO/G,KAhD3B,wBAgDwD+G,gBAAiBA,IAS1FgE,CAAmBnJ,EAAKoJ,aACjCrD,EAASJ,GAAiB,OKyBfsD,CA5Ef,cAA6BpH,IAAMF,UAAU0H,cAAAC,SAAA/K,WAAAwD,KAMzCyE,cAAiBoB,KACb7F,KAAKC,MAAMvC,SAASmI,EAAW7F,KAAKC,MAAMrC,YAL9C4J,oBACIxH,KAAKC,MAAMvC,SAASsC,KAAKC,MAAMtC,YAAYqC,KAAKC,MAAMrC,UAQ1DmC,SACI,OAAOD,IAAAI,cAAA,WACFF,KAAKC,MAAMoD,WAAavD,IAAAI,cAACuH,IAAS,MAAI,KACvC3H,IAAAI,cAACwG,EAAK,CACFtD,gBAAiBpD,KAAKC,MAAMmD,gBAC5BxF,SAAUoC,KAAKC,MAAMrC,SACrBD,YAAaqC,KAAKC,MAAMtC,YACxBwF,MAAOnD,KAAKC,MAAMkD,MAClBsB,cAAezE,KAAKyE,cACpBvG,aAAc8B,KAAKC,MAAM/B,aACzBE,WAAY4B,KAAKC,MAAM7B,WACvBkF,oBAAuBtD,KAAKC,MAAMqD,2CCpBnCoE,MAZCzH,GACLH,IAAAI,cAAA,UAAQoB,UAAWC,IAAEoG,QACxB7H,IAAAI,cAAA,OAAKgG,IAAI,6DAETpG,IAAAI,cAAA,OAAKoB,UAAWC,IAAEqG,YACb3H,EAAMP,OACDI,IAAAI,cAAA,WAAMD,EAAMnB,MAAM,MAAGgB,IAAAI,cAAA,UAAQuF,QAASxF,EAAMf,QAAQ,WAAgB,KACpEY,IAAAI,cAACuC,IAAO,CAACrC,GAAI,UAAW,oBCN1C,IAAItE,EAAe,CACf0H,OAAQ,KACRzE,MAAO,KACPD,MAAO,KACPY,QAAQ,GAGZ,MAYamI,EAAkBA,CAACrE,EAAQzE,EAAOD,EAAOY,KAAM,CACxDrD,KAtBkB,gBAsBGyL,QACjB,CAACtE,SAAQzE,QAAOD,QAAOY,YAGlBqI,EAAkBA,IAAMhE,UAClC,MAAM/F,QAAkBd,IAAQ2B,SAC/B,GAAiC,IAA7Bb,EAASC,KAAKkG,WAAkB,CAChC,IAAInI,GAACA,EAAE+C,MAAEA,EAAKD,MAAEA,GAASd,EAASC,KAAKA,KACvC+F,EAAS6D,EAAgB7L,EAAI+C,EAAOD,GAAO,MAsBpCkJ,MA3CK,WAAkC,IAAjCzL,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGV,EAAca,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAOC,EAAON,MACV,IAXc,gBAYV,MAAO,IACAE,KACAI,EAAOmL,SAElB,QACI,OAAOvL,ICDJsD,kBAPQtD,IACZ,CACHmD,OAAQnD,EAAMoD,KAAKD,OACnBZ,MAAOvC,EAAMoD,KAAKb,QAIa,CAACI,OD4BlBA,IAAM6E,UAES,WADV7G,IAAQgC,UAClBjB,KAAKkG,YACdH,EAAS6D,EAAgB,KAAM,KAAM,MAAM,MC/BpChI,CAdf,cAA8BC,IAAMF,UAEhCG,SACI,OAAOD,IAAAI,cAACwH,EAAW1H,KAAKC,mECChC,MAAMgI,GAAYC,aAAiB,IAmB7BC,GAAiBC,YAAU,CAACC,KAAM,SAAjBD,CAlBLrH,IAA2B,IAA1BuH,aAACA,EAAYnH,MAAEA,GAAMJ,EACpC,OACIjB,IAAAI,cAAA,QAAMqI,SAAUD,GACP5H,aAAY,QAAS,QAAS,CAAC8H,KAAUP,IAAYxH,MACrDC,aAAY,WAAY,WAAY,CAAC8H,MAAW/H,KAAO,CAACpE,KAAM,aAC9DqE,aAAY,KAAM,aAAa,GAAID,KAAO,CAACpE,KAAM,YAAa,eAElE8E,GAASrB,IAAAI,cAAA,OAAKoB,UAAWC,KAAEkH,WAC3BtH,GAGDrB,IAAAI,cAAA,WACIJ,IAAAI,cAAA,UAAQ7D,KAAK,UAAS,aA0BvBwD,mBAJUtD,IAAK,CAC1BmD,OAAQnD,EAAMoD,KAAKD,SAGiB,CAACZ,MFXpBA,CAACC,EAAMC,EAAS0J,IAAe3E,UAChD,MAAM/F,QAAiBd,IAAQ4B,MAAMC,EAAOC,EAAU0J,GACtD,GAAiC,IAA7B1K,EAASC,KAAKkG,WACdH,EAAS+D,SACN,CACH,IAAI5L,EAAU6B,EAASC,KAAK/B,SAASO,OAAS,EAAIuB,EAASC,KAAK/B,SAAS,GAAK,aAC9E8H,EAAS2E,YAAW,QAAS,CAACC,OAAQzM,QEK/B0D,CAlBAI,IAKX,OAAGA,EAAMP,OACEI,IAAAI,cAACC,KAAQ,CAACC,GAAI,aAElBN,IAAAI,cAAA,WACHJ,IAAAI,cAAA,UAAI,SACJJ,IAAAI,cAACiI,GAAc,CAACI,SATFM,IACd5I,EAAMnB,MAAM+J,EAAS9J,MAAO8J,EAAS7J,SAAU6J,EAAS5J,kBCzBhE,IAAInD,GAAe,CACfgN,aAAa,GA2BFC,OAxBI,WAAkC,IAAjCxM,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGV,GACxB,QAD4CU,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC9BL,MACV,IAToB,sBAUhB,MAAO,IACAE,EACHuM,aAAa,GAErB,QACI,OAAOvM,iCCnBnB,IAAIT,GAAe,GAQJkN,OANQ,WAAkC,IAAjCzM,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGV,GAAoBU,UAAAC,OAAA,GAAAD,UAAA,GAGhD,OAAOD,uBCKX,IAAI0M,GAAWC,YAAgB,CAC3BC,YAAaC,KACbC,YAAa/M,KACbgN,QAASN,GACTpC,UAAWxC,EACXzE,KAAMqI,EACNK,KAAMkB,KACNC,IAAKT,KAGT,MAAMU,GAAmBrH,OAAOsH,sCAAwCxC,IAMzDyC,OALDC,YAAYX,GAAUQ,GAAiBI,YAAgBC,kBCb9D,MAAMC,GAAenK,GAChBK,GACGH,IAAAI,cAAC8J,WAAQ,CAACC,SAAUnK,IAAAI,cAACuH,IAAS,OACjC3H,IAAAI,cAACN,EAAcK,ICMrBiK,GAAmBpK,IAAMqK,KAAK,IAAMzO,EAAA0O,EAAA,GAAArM,KAAArC,EAAAyL,KAAA,YACpCkD,GAAmBvK,IAAMqK,KAAK,IAAMzO,EAAA0O,EAAA,GAAArM,KAAArC,EAAAyL,KAAA,YAqC1C,IAAImD,GAAepD,YACZqD,KACA1K,YANkBtD,IAAK,CACvBuM,YAAavM,EAAMiN,IAAIV,cAKE,CAAC0B,cJhCJA,IAAOxG,IAChCA,EAAS+D,KACRhK,KAAK,KACFiG,EAL0B,CAAQ3H,KAnBd,6BImDT6K,CAnCnB,cAAkBpH,IAAMF,UAEjB4H,oBACOxH,KAAKC,MAAMuK,gBAGlBzK,SACO,OAAKC,KAAKC,MAAM6I,YAGThJ,IAAAI,cAAA,OAAKoB,UAAU,eACXxB,IAAAI,cAACuK,EAAe,MAChB3K,IAAAI,cAACsC,EAAM,MACP1C,IAAAI,cAAA,OAAKoB,UAAU,uBACXxB,IAAAI,cAACwK,IAAK,CAACC,KAAK,WACL5K,OAAQgK,GAAaG,MAE5BpK,IAAAI,cAACwK,IAAK,CAACC,KAAK,oBACL5K,OAAQgK,GAAaM,MAE5BvK,IAAAI,cAACwK,IAAK,CAACC,KAAK,SACL5K,OAASA,IAAMD,IAAAI,cAAC0K,EAAc,QAErC9K,IAAAI,cAACwK,IAAK,CAACC,KAAK,SACL5K,OAASA,IAAMD,IAAAI,cAAC2K,GAAK,UAjBP/K,IAAAI,cAACuH,IAAS,SAwC7CqD,OARO7K,GACRH,IAAAI,cAAC6K,KAAa,CAACC,SAAUC,kBAC3BnL,IAAAI,cAACgL,IAAQ,CAACvB,MAAOA,IACb7J,IAAAI,cAACoK,GAAY,QCvDzBa,IAASpL,OACLD,IAAAI,cAAC4K,GAAY,MAAKM,SAASC,eAAe,SlByH5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzN,KAAK0N,IACjCA,EAAaC,gDmBnInB,IAAAtM,EAAA1D,EAAA,GAAA2D,EAAA3D,EAAA4D,EAAAF,GAAAuM,EAAAjQ,EAAA,KAAAkQ,EAAAlQ,EAAA4D,EAAAqM,GAQelE,IALExH,IAENH,IAAAI,cAAA,OAAKoB,UAAWC,IAAExE,UAAWmJ,IAAI,oGCJ5CrJ,EAAAC,QAAA,CAAkB6F,OAAA,0BAAA4C,UAAA,6BAAAM,WAAA,8BAAAL,OAAA,+CCAlB3I,EAAAC,QAAA,CAAkB0E,YAAA,mCAAAL,MAAA,6BAAAsH,UAAA,mECDlB/M,EAAAC,EAAAC,EAAA,sBAAA4M,IAAA9M,EAAAC,EAAAC,EAAA,sBAAAsM,IAAO,MAAMM,EAAWqD,IACpB,IAAIA,EACJ,MAAO,qBAIE3D,EAAoBD,GAAe4D,IAC5C,GAAIA,EAAMpP,OAASwL,EAAY,uBAAAnK,OAAwBmK,EAAS,iCCNpEpL,EAAAC,QAAA,CAAkBmJ,SAAA,wBAAAI,IAAA,mBAAA1D,OAAA,2CCAlB9F,EAAAC,QAAA,CAAkB6K,OAAA,uBAAAC,WAAA,6DCDlBlM,EAAAC,EAAAC,EAAA,sBAAAkQ,IAAApQ,EAAAC,EAAAC,EAAA,sBAAAmQ,IAAArQ,EAAAC,EAAAC,EAAA,sBAAAoQ,IAAAtQ,EAAAC,EAAAC,EAAA,sBAAAqQ,IAAAvQ,EAAAC,EAAAC,EAAA,sBAAAsQ,IAAA,IAAAC,EAAAzQ,EAAA,IAOA,IAAII,EAAe,CACfsQ,MAAO,CACH,CAACpQ,GAAI,EAAGG,QAAS,mBAAoBkQ,WAAY,IACjD,CAACrQ,GAAI,EAAGG,QAAS,qBAAuBkQ,WAAY,IACpD,CAACrQ,GAAI,EAAGG,QAAS,SAAUkQ,WAAY,IACvC,CAACrQ,GAAI,EAAGG,QAAS,OAAQkQ,WAAY,KAEzCC,QAAS,KACT3N,OAAQ,IAGZ,MAqCamN,EAAc9P,GAAO+H,UAC9B,MAAM9F,QAAahB,IAAWqB,eAAetC,GAC7CgI,EAASkI,EAAejO,KAIf8N,EAAiB/P,GAAO+H,UACjC,MAAM/F,QAAiBf,IAAWwB,UAAUzC,GAC5CgI,EAASuI,EAAcvO,EAASC,QAGvB+N,EAAoBrN,GAAWoF,UAEP,WADV9G,IAAWyB,aAAaC,IAClCV,KAAKkG,YACdH,EAASuI,EAAc5N,KAIlBsN,EAAwB9P,IAAO,CAAOE,KAvElC,WAuEkDF,QAASA,IAE/D+P,EAAkBI,IAAO,CAAOjQ,KAvEpB,oBAuE4CiQ,YACxDC,EAAiB5N,IAAM,CAAOtC,KAvEnB,kBAuE0CsC,WAEnDyK,IA5DQ,WAAkC,IAAjC7M,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGV,EAAca,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAOC,EAAON,MACV,IAlBS,WAkBO,CACZ,IAAImQ,EAAU,CACVxQ,GAAI,EACJG,QAASQ,EAAOR,QAChBkQ,WAAY,GAEhB,MAAO,IACA9P,EACH6P,MAAO,IAAI7P,EAAM6P,MAAOI,GACxBC,YAAa,IASrB,IAlCiB,oBAmCb,MAAO,IACAlQ,EACH+P,QAAS3P,EAAO2P,SAGxB,IAvCgB,kBAwCZ,MAAO,IACA/P,EACHoC,OAAQhC,EAAOgC,QAGvB,QACI,OAAOpC","file":"static/js/main.a0259984.chunk.js","sourcesContent":["// const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        // case UPDATE_NEW_MESSAGE_BODY :\r\n        //     return {\r\n        //         ...state,\r\n        //         newMessageBody: action.body,\r\n        //     }\r\n        case  SEND_MESSAGE :\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}],\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n// export const updateNewMessageBodyCreator = (body) =>\r\n//     ({type: UPDATE_NEW_MESSAGE_BODY, body: body })\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2PJeb\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': 'd0638082-d4cb-497d-8342-fc69bd07577d'}\r\n})\r\n\r\nexport const UsersAPI = {\r\n    getUsers(currentPage=1, pageSize=10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    unfollowUser(id) {\r\n        return instance.delete(`follow/${id}`).then(response => response.data)\r\n    },\r\n\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`).then(response => response.data)\r\n    },\r\n\r\n    getUserProfile(id) {\r\n        console.warn('Use ProfileAPI object')\r\n        return ProfileAPI.getUserProfile(id)\r\n    }\r\n\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    getUserProfile(id) {\r\n        return instance.get(`profile/${id}`).then(response => response.data)\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`profile/status/${id}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`,{status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    \r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            \r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Attt\",\"item\":\"Navbar_item__lcYeZ\",\"activeLink\":\"Navbar_activeLink__1DrKN\"};","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport s from './FormsControls.module.css'\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched  && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span> {error}</span>}\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props ={}, text = \"\") => (\r\n    <div>\r\n        <Field component={component}\r\n                validate={validators} name={name} placeholder={placeholder} {...props} />{text}\r\n    </div>\r\n)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map( u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }  \r\n        return u;\r\n    })\r\n}","import { UsersAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLOWWING_PROGRESS = 'TOGGLE_IS_FOLOWWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW :\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true} )\r\n                // state.users.map( u => u.id === action.userId ? {...u, followed: true} : u ),\r\n            }\r\n        case UNFOLLOW :\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false} )\r\n            }\r\n        case SET_USERS :\r\n            return {...state, users: action.users }\r\n        case SET_CURRENT_PAGE :\r\n            return {...state, currentPage: action.currentPage }\r\n        case SET_TOTAL_USERS_COUNT :\r\n            return {...state, totalUsersCount: action.totalUsersCount }\r\n        case TOGGLE_IS_FETCHING :\r\n            return {...state, isFetching: action.isFetching }\r\n        case TOGGLE_IS_FOLOWWING_PROGRESS :\r\n            return {...state, \r\n                followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress,action.userId]\r\n                : state.followingInProgress.filter(id => id != action.userId)}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId: userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId: userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users: users })\r\nexport const setPageNumber = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage: currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLOWWING_PROGRESS, isFetching, userId })\r\n\r\nexport const getUsers = (currentPage,pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setPageNumber(currentPage))\r\n    const data = await UsersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n    dispatch(toggleIsFetching(false));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const data = await apiMethod(userId);\r\n    if(data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const followUser = (userId) => (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, UsersAPI.followUser.bind(userId), followSuccess)\r\n    \r\n   \r\n}\r\n\r\nexport const unfollowUser = (userId) => (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, UsersAPI.unfollowUser.bind(userId), unfollowSuccess)\r\n}\r\n\r\n\r\nexport default usersReducer","import React, { useState } from 'react';\r\nimport NavLink from 'react-router-dom/NavLink';\r\nimport s from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i=1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={s.paginator}>\r\n            {portionNumber > 1 &&\r\n                <button className={s.button} onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n            { pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ cn({\r\n                    [s.active]: currentPage === p\r\n                }, s.pageNumber)}\r\n                    onClick={()=> {onPageChanged(p)}} \r\n                    key={p}>{p}</span> \r\n            })}\r\n            {portionCount > portionNumber &&\r\n                <button className={s.button} onClick={() => { setPortionNumber(portionNumber + 1) }}>Next</button>}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Paginator\r\n","import React from 'react';\r\nimport NavLink from 'react-router-dom/NavLink';\r\nimport s from './Users.module.css';\r\n\r\nlet User = ({user, followingInProgress, followUser, unfollowUser, ...props}) => {\r\n    return (<div className={s.userCard}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small ? user.photos.small : 'https://syrboyi.kz/wp-content/uploads/2020/07/kisspng-question-mark-questions-5b4e9adc353a96.979878161531878108218-768x683.jpg'} className={s.img} />\r\n                </NavLink>\r\n                <div>Name: {user.name}</div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress\r\n                            .some(id => id === user.id) } \r\n                                onClick={()=> { unfollowUser(user.id) }}>\r\n                            Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id) } \r\n                            onClick={() => { followUser(user.id) }}>\r\n                            Follow</button>}\r\n                </div>\r\n                <div>Status: {user.status}</div>\r\n                {user.location && user.location.city && <div>City: {user.location.city}</div>}\r\n                {user.location && user.location.country && <div>Country: {user.location.country}</div>}\r\n            </div>)\r\n}\r\n\r\nexport default User","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({totalUsersCount, pageSize, currentPage, onPageChanged, users, followingInProgress, followUser, unfollowUser, ...props}) => {\r\n    return (<div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        {users.map(user => <User user={user} followingInProgress={followingInProgress} followUser={followUser} unfollowUser={unfollowUser} key={user.id}/>)}\r\n        </div>)\r\n}\r\n\r\nexport default Users\r\n\r\n//  <button onClick={(e) => onFollowClick(e,user.id)}>{user.followed === true ? 'Follow' : 'Unfollow'}</button>\r\n// let onFollowClick = (e,id) => {\r\n//     if (e.target.innerText === 'Follow') {\r\n//         props.toggleFollowingProgress(true)\r\n//         axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${id}`, {\r\n//         withCredentials: true,\r\n//         headers: {'API-KEY': 'sfsdfs-asdfasd-adsfasd-dafas'}\r\n//         }).then(response => {\r\n//             if (response.data.resultCode === 0) {\r\n//                 props.unfollow(id);\r\n//                 e.target.innerText = 'Unfollow';\r\n//             }\r\n//             props.toggleFollowingProgress(false)\r\n//         })\r\n//     } else if (e.target.innerText === 'Unfollow') {\r\n//         props.toggleFollowingProgress(true)\r\n//         axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${id}`, {}, {\r\n//         withCredentials: true,\r\n//         headers: {'API-KEY': 'sfsdfs-asdfasd-adsfasd-dafas'}\r\n//         }).then(response => {\r\n//             if (response.data.resultCode === 0) {\r\n//                 props.follow(id);\r\n//                 e.target.innerText = 'Follow';\r\n//             }\r\n//             props.toggleFollowingProgress(false)\r\n//         })\r\n//     }\r\n// }","export const getUsersList = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { setPageNumber, \r\n    setUsers, \r\n    toggleFollowingProgress, \r\n    getUsers, \r\n    unfollowUser, \r\n    followUser } from '../../redux/users-reducer'\r\nimport Users from './Users';\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { getUsersList, getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount } from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage,this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber,this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            {this.props.isFetching ? <Preloader/>: null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize} \r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users} \r\n                onPageChanged={this.onPageChanged}\r\n                unfollowUser={this.props.unfollowUser}\r\n                followUser={this.props.followUser} \r\n                followingInProgress = {this.props.followingInProgress}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersList(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress,\r\n//     }\r\n// }\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setPageNumberAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingsAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport default compose(\r\n        // withAuthRedirect,\r\n        connect(mapStateToProps,{\r\n            followUser,\r\n            unfollowUser,\r\n            setUsers,\r\n            setPageNumber,\r\n            toggleFollowingProgress,\r\n            getUsers,\r\n        }))(UsersContainer)","import React from 'react';\r\nimport NavLink from 'react-router-dom/NavLink';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n        \r\n        <div className={s.loginBlock}>\r\n            {props.isAuth \r\n                ? <div>{props.login} - <button onClick={props.logout}>log out</button> </div>\r\n                : <NavLink to={'/login'} > Login</NavLink>}\r\n            </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA :\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload: \r\n        {userId, email, login, isAuth}\r\n    })\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n   const response =  await authAPI.authMe()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email,password,rememderMe) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememderMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\"\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{logout})(HeaderContainer)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { createField, Input } from '../common/FormsControls/FormsControls';\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router';\r\nimport s from '../common/FormsControls/FormsControls.module.css'\r\n\r\nconst maxLength = maxLengthCreator(30)\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                {createField(\"Email\", \"email\", [required, maxLength], Input)}\r\n                {createField(\"Password\", \"password\", [required], Input, {type: 'password'})}\r\n                {createField(null, \"rememberMe\",[], Input, {type: 'checkbox'}, 'remember me')}\r\n\r\n            {error && <div className={s.formError}>\r\n            {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button type='submit'>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { getAuthUserData } from './auth-reducer'\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS :\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    dispatch(getAuthUserData())\r\n    .then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n     //let promise = dispatch(getAuthUserData())\r\n    //Promise.all([promise]).then()\r\n}\r\n\r\n\r\nexport default appReducer","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","import { applyMiddleware, combineReducers, legacy_createStore as createStore, compose } from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport dialogsReducer from \"./dialogs-reduser\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet redusers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(redusers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\n// let store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store","import React, { Suspense } from 'react';\r\nimport Preloader from '../components/common/preloader/Preloader';\r\n\r\n\r\n// let mapStateToPropsForSuspense= (state) => ({\r\n//     isAuth: state.auth.isAuth\r\n// })\r\n\r\nexport const withSuspense= (Component) => {\r\n    return (props) => { \r\n        return <Suspense fallback={<Preloader />}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n    \r\n}","import React, { Suspense } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Route} from \"react-router-dom\";\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport Preloader from './components/common/preloader/Preloader';\r\nimport store from \"./redux/redux-store\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\n\r\nclass App extends React.Component {\r\n\r\n       componentDidMount() {\r\n              this.props.initializeApp()\r\n       }\r\n      \r\n       render() {\r\n              if (!this.props.initialized) return <Preloader />\r\n              \r\n              return (\r\n                     <div className='app-wrapper'>\r\n                         <HeaderContainer />\r\n                         <Navbar />\r\n                         <div className='app-wrapper-content'>\r\n                             <Route path='/dialogs'\r\n                                    render={withSuspense(DialogsContainer)}/>\r\n         \r\n                             <Route path='/profile/:userId?'\r\n                                    render={withSuspense(ProfileContainer)}/>\r\n         \r\n                             <Route path='/users'\r\n                                    render={ () => <UsersContainer /> }/>\r\n         \r\n                             <Route path='/login'\r\n                                    render={ () => <Login /> }/>\r\n                         </div>\r\n                     </div>\r\n                 )\r\n              }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n       initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n       withRouter,\r\n       connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n       return <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <AppContainer />\r\n            </Provider>\r\n        </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport SamuraiJSApp from './App';\r\n\r\n    ReactDOM.render(\r\n        <SamuraiJSApp />, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport s from './Preloader.module.css';\r\n\r\nlet Preloader = (props) => {\r\n\r\n    return <img className={s.preloader} src='https://www.wpfaster.org/wp-content/uploads/2013/06/circle-loading-gif.gif' />\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Paginator_active__NTYpQ\",\"paginator\":\"Paginator_paginator__21alq\",\"pageNumber\":\"Paginator_pageNumber__3Vrvs\",\"button\":\"Paginator_button__26p-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1sAHr\",\"error\":\"FormsControls_error__2IhFr\",\"formError\":\"FormsControls_formError__-_-yp\"};","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required';\r\n    \r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength ) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n    \r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCard\":\"Users_userCard__i-OBu\",\"img\":\"Users_img__1yTAF\",\"active\":\"Users_active__3OmnU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__idR6P\",\"loginBlock\":\"Header_loginBlock__2oWgm\"};","import { ProfileAPI, UsersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n// const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE ';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST : {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.message,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n            }\r\n        }\r\n        // case UPDATE_NEW_POST_TEXT : {\r\n        //     return {\r\n        //         ...state,\r\n        //         newPostText: action.newText,\r\n        //     };\r\n        // }\r\n        case SET_USER_PROFILE : {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        }\r\n        case SET_USER_STATUS : {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const getProfile = (id) => async (dispatch) => {\r\n    const data = await ProfileAPI.getUserProfile(id);\r\n    dispatch(setUserProfile(data)); \r\n}\r\n\r\n\r\nexport const getUserStatus = (id) => async (dispatch) => {\r\n    const response = await ProfileAPI.getStatus(id);\r\n    dispatch(setUserStatus(response.data));\r\n}\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const response = await ProfileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (message) => ({type: ADD_POST, message: message})\r\n// export const updateNewPostTextActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text })\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status})\r\n\r\nexport default profileReducer"],"sourceRoot":""}