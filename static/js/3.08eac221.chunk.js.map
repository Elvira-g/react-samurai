{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["module","exports","descriptionBlock","postsBlock","posts","item","Post","props","React","createElement","className","s","src","message","likesCount","maxLength","maxLengthCreator","PostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","type","MyPosts","memo","postsElements","map","p","formData","addPost","ProfileStatusWithHooks","editMode","setEditMode","useState","status","setStatus","useEffect","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateUserStatus","ProfileInfo","profile","photos","large","aboutMe","contacts","github","Preloader","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","compose","authorizedUserId","auth","userId","isAuth","setUserProfile","getProfile","getUserStatus","withRouter","Component","componentDidMount","this","match","params","history","push","render","Object","assign"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,iBAAA,kFCAlBF,EAAAC,QAAA,CAAkBE,WAAA,4BAAAC,MAAA,6CCAlBJ,EAAAC,QAAA,CAAkBI,KAAA,qICcHC,MAZDC,GAEVC,IAAAC,cAAA,OAAKC,UAAWC,IAAEN,MAChBG,IAAAC,cAAA,OAAKG,IAAI,4FACLL,EAAMM,QACNL,IAAAC,cAAA,WACFD,IAAAC,cAAA,YAAM,QAAW,IAAGF,EAAMO,8CCFlC,MAAMC,EAAYC,YAAiB,IAa7BC,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,CAXJX,GACRC,IAAAC,cAAA,QAAMW,SAAUb,EAAMc,cACrBb,IAAAC,cAAA,WAAKD,IAAAC,cAACa,IAAK,CAACC,UAAWC,IAAUC,KAAM,UAC3BC,YAAY,qBACZC,SAAU,CAACC,IAAUb,MAEjCP,IAAAC,cAAA,WAAKD,IAAAC,cAAA,UAAQoB,KAAK,UAAS,eAuCxBC,MAhCCtB,IAAMuB,KAAMxB,IACxB,IAAIyB,EACAzB,EAAMH,MAAM6B,IAAKC,GAAK1B,IAAAC,cAACH,EAAI,CAACO,QAASqB,EAAErB,QAASC,WAAYoB,EAAEpB,cAiBlE,OACIN,IAAAC,cAAA,OAAKC,UAAWC,IAAER,YACdK,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,WACID,IAAAC,cAACQ,EAAc,CAACG,SARVe,IACd5B,EAAM6B,QAAQD,EAAStB,aASnBL,IAAAC,cAAA,OAAKC,UAAWC,IAAEP,OACZ4B,gCCRHK,MArCiB9B,IAE5B,MAAO+B,EAAUC,GAAeC,oBAAS,IAClCC,EAAQC,GAAaF,mBAASjC,EAAMkC,QAC3CE,oBAAU,KACND,EAAUnC,EAAMkC,SACjB,CAAClC,EAAMkC,SAeN,OACIjC,IAAAC,cAAA,YACG6B,GACC9B,IAAAC,cAAA,WACID,IAAAC,cAAA,QAAMmC,cAjBGC,KACrBN,GAAY,KAgBwChC,EAAMkC,QAAU,SAG/DH,GACG9B,IAAAC,cAAA,WACID,IAAAC,cAAA,SAAOqC,SAbCC,IACpBL,EAAUK,EAAEC,cAAcC,QAYmBC,WAAW,EAAMC,OAlBvCC,KACvBb,GAAY,GACZhC,EAAM8C,iBAAiBZ,IAgBmEQ,MAAOR,OCH1Fa,MAxBM/C,GAEZA,EAAMgD,QAIH/C,IAAAC,cAAA,WAKID,IAAAC,cAAA,OAAKC,UAAWC,IAAET,kBACdM,IAAAC,cAAA,OAAKG,IAAKL,EAAMgD,QAAQC,OAAOC,QAC/BjD,IAAAC,cAAA,WAAMF,EAAMgD,QAAQG,SACpBlD,IAAAC,cAAA,WAAK,WAASF,EAAMgD,QAAQI,SAASC,SAEzCpD,IAAAC,cAAA,WAAKD,IAAAC,cAAC4B,EAAsB,CAACI,OAAQlC,EAAMkC,OAAQY,iBAAkB9C,EAAM8C,qBAb5E7C,IAAAC,cAACoD,IAAS,cCiBVC,MAFUC,YAnBAC,IACd,CACH5D,MAAO4D,EAAMC,YAAY7D,MACzB8D,YAAaF,EAAMC,YAAYC,cAIXC,IACjB,CAKH/B,QAAUvB,IACNsD,EAASC,YAAqBvD,OAKjBkD,CAA6CjC,GCRvDuC,MAVE9D,GAGTC,IAAAC,cAAA,WACID,IAAAC,cAAC6C,EAAW,CAACC,QAAShD,EAAMgD,QAASd,OAAQlC,EAAMkC,OAAQY,iBAAkB9C,EAAM8C,mBACnF7C,IAAAC,cAACqD,EAAgB,uBCgCdQ,sBACXP,YAVmBC,IAAK,CACxBT,QAASS,EAAMC,YAAYV,QAC3Bd,OAAQuB,EAAMC,YAAYxB,OAC1B8B,iBAAkBP,EAAMQ,KAAKC,OAC7BC,OAAQV,EAAMQ,KAAKE,SAMM,CAACC,mBAAgBC,eAAYC,kBAAexB,uBACrEyB,IAFWR,CApCf,cAA+B9D,IAAMuE,UAEjCC,oBACI,IAAIP,EAASQ,KAAK1E,MAAM2E,MAAMC,OAAOV,OAChCA,IACDA,EAASQ,KAAK1E,MAAMgE,mBAEhBU,KAAK1E,MAAM6E,QAAQC,KAAK,UAGhCJ,KAAK1E,MAAMqE,WAAWH,GACtBQ,KAAK1E,MAAMsE,cAAcJ,GAG7Ba,SACI,OACI9E,IAAAC,cAAA,WACID,IAAAC,cAAC4D,EAAOkB,OAAAC,OAAA,GAAKP,KAAK1E,MAAK,CAAEgD,QAAS0B,KAAK1E,MAAMgD,QAASd,OAAQwC,KAAK1E,MAAMkC,OAAQY,iBAAkB4B,KAAK1E,MAAM8C","file":"static/js/3.08eac221.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2Ku-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__10Rtn\",\"posts\":\"MyPosts_posts__2ro13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1hD0-\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nconst PostsForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n            <div><Field component={Textarea} name={'message'}\r\n                        placeholder='Enter your message'\r\n                        validate={[required, maxLength]}/>\r\n            </div>\r\n            <div><button type='submit'>Add Post</button>\r\n            </div>\r\n        </form>\r\n}\r\n\r\nconst PostsReduxForm = reduxForm({form: 'posts'})(PostsForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    // let newPostElement = React.createRef();\r\n\r\n    // let onAddPost = () => {\r\n    //     props.addPost();\r\n    // }\r\n\r\n    // let onPostChange = () => {\r\n    //     let text = newPostElement.current.value;\r\n    //     props.updateNewPostText(text);\r\n    // }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.addPost(formData.message)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <PostsReduxForm onSubmit={onSubmit} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n            </div>\r\n        ) \r\n    \r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    } else {\r\n        return (\r\n            <div>\r\n                {/*<div>\r\n                    <img\r\n                        src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n        </div>*/}\r\n                <div className={s.descriptionBlock}>\r\n                    <img src={props.profile.photos.large} />\r\n                    <div>{props.profile.aboutMe}</div>\r\n                    <div>gitHub: {props.profile.contacts.github}</div>\r\n                </div>\r\n                <div><ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus} /></div>\r\n            </div>\r\n        ) \r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // updateNewPostText: (text) => {\r\n        //     let action = updateNewPostTextActionCreator(text);\r\n        //     dispatch(action)\r\n        // },\r\n        addPost: (message) => {\r\n            dispatch(addPostActionCreator(message))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { setUserProfile, getProfile, getUserStatus, updateUserStatus } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateUserStatus={this.props.updateUserStatus} />\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\n\r\n// let authRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n// let WithUrlDataContainerComponent =  withRouter(AuthRedirectComponent)\r\n\r\nexport default compose(\r\n    connect (mapStateToProps,{setUserProfile, getProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}